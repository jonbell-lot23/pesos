generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Source {
  id       Int        @id @default(autoincrement())
  url      String
  emoji    String
  userid   Int
  User     User       @relation(fields: [userid], references: [id])
  firehose firehose[]
}

model User {
  id        Int        @id @default(autoincrement())
  name      String     @unique
  createdAt DateTime   @default(now())
  Source    Source[]
  firehose  firehose[]
}

model firehose {
  id          Int      @id @default(autoincrement())
  title       String
  url         String
  description String?
  postdate    DateTime
  source      String?
  slug        String?  @unique(map: "firehose_slug_key") @default("")
  userid      Int      @default(1)
  sourceId    Int?
  Source      Source?  @relation(fields: [sourceId], references: [id])
  User        User     @relation(fields: [userid], references: [id], onDelete: SetNull)
}

model pesos_items {
  id          Int      @id @default(autoincrement())
  title       String
  url         String
  description String?
  postdate    DateTime
  source      String?
  slug        String   @unique(map: "pesos_items_slug_field_key")
  userId      String? // Now matching pesos_User's id type (String)
  sourceId    Int?

  // Relation to pesos_User (note the lowercase field name)
  pesos_User    pesos_User?    @relation(fields: [userId], references: [id], onDelete: SetNull, onUpdate: Cascade)
  // Relation to pesos_Sources remains unchanged
  pesos_Sources pesos_Sources? @relation(fields: [sourceId], references: [id], onDelete: SetNull, onUpdate: Cascade)

  @@unique([slug], name: "pesos_items_slug_table_key")
}

model pesos_User {
  id          String              @id
  username    String              @unique
  createdAt   DateTime            @default(now())
  // Back relation for pesos_items
  pesos_items pesos_items[]
  // Relation for sources
  sources     pesos_UserSources[]
}

model pesos_Sources {
  id          Int                 @id @default(autoincrement())
  url         String              @unique
  users       pesos_UserSources[]
  pesos_items pesos_items[]
}

model pesos_UserSources {
  userId    String
  sourceId  Int
  createdAt DateTime      @default(now())
  source    pesos_Sources @relation(fields: [sourceId], references: [id], onDelete: Cascade)
  user      pesos_User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([userId, sourceId])
}

model Backup {
  id         Int      @id @default(autoincrement())
  timestamp  DateTime @default(now())
  storyCount Int      @default(0)
}
